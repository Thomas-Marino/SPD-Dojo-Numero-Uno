// Dojo Número Uno.

# define LED_ROJO 13
# define LED_AMARILLO 12
# define LED_VERDE 11
# define BUZZER 9

int contador = 0;
// ========== FUNCION PARA ENCENDER LEDS ==========
void encender_led(int led_recibido)
{
  digitalWrite(led_recibido, HIGH);
}
// ========== FUNCION PARA APAGAR LEDS ==========
void apagar_led(int led_recibido, float pausa_recibida)
{
  digitalWrite(led_recibido, LOW);
  delay(pausa_recibida);
}
// ========== FUNCION PARA ENCENDER BUZZER ==========
void encender_buzzer(int frecuencia_recibida, int vueltas_recibidas, int pausa_recibida)
{
  contador = 0;
  while (contador < vueltas_recibidas)
  {
    tone(BUZZER, frecuencia_recibida, 500);
    delay (pausa_recibida);
    contador += 1;
  }
}
// ========== FUNCION PRINCIPAL ==========
void ejecutar_proceso()
{
  // ========= Led Rojo =========
  encender_led(LED_ROJO);
  // Llamado a funcion encender_buzzer ejecutando 30 vueltas cada 1 segundo, es decir que durará 30 segundos encendido 
  encender_buzzer(500, 30, 1000); 
  apagar_led(LED_ROJO, 0.75);
  // ========= Led Amarillo =========
  encender_led(LED_AMARILLO); 
  // Llamado a funcion encender_buzzer ejecutando 2 vueltas cada 2,5 segundos, es decir que durará 5 segundos encendido
  encender_buzzer(1500, 2, 2500); 
  apagar_led(LED_AMARILLO, 0.75);
  // ========= Led Verde =========
  encender_led(LED_VERDE);
  delay(45000); 
  apagar_led(LED_VERDE, 0.75);
  // ========= Led Amarillo =========
  encender_led(LED_AMARILLO);
  // Llamado a funcion encender_buzzer ejecutando 2 vueltas cada 2,5 segundos, es decir que durará 5 segundos encendido
  encender_buzzer(1500, 2, 2500); 
  apagar_led(LED_AMARILLO, 0.75);
}

void setup()
{
  pinMode(LED_ROJO, OUTPUT);  
  pinMode(LED_AMARILLO, OUTPUT);
  pinMode(LED_VERDE, OUTPUT);
  pinMode(BUZZER, OUTPUT);
}

void loop()
{
  ejecutar_proceso();
}